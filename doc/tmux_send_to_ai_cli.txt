*tmux_send_to_ai_cli.txt*    Send text from Vim to tmux ai cli pane

Author: i9wa4
License: MIT

==============================================================================
CONTENTS                                           *tmux-send-to-ai-cli-contents*

    1. Introduction .................. |tmux-send-to-ai-cli-introduction|
    2. Supported AI CLIs ............. |tmux-send-to-ai-cli-supported|
    3. Features ...................... |tmux-send-to-ai-cli-features|
    4. Requirements .................. |tmux-send-to-ai-cli-requirements|
    5. Installation .................. |tmux-send-to-ai-cli-installation|
    6. Configuration ................. |tmux-send-to-ai-cli-configuration|
    7. Commands ...................... |tmux-send-to-ai-cli-commands|
    8. Mappings ...................... |tmux-send-to-ai-cli-mappings|
    9. Limitations ................... |tmux-send-to-ai-cli-limitations|
   10. Examples ...................... |tmux-send-to-ai-cli-examples|

==============================================================================
1. INTRODUCTION                                *tmux-send-to-ai-cli-introduction*

vim-tmux-send-to-ai-cli is a Vim plugin that allows you to send text
from Vim to a tmux pane running AI CLI. This enables seamless integration
between your text editor and AI assistant.

==============================================================================
2. SUPPORTED AI CLIS                              *tmux-send-to-ai-cli-supported*

- Claude Code
- Codex CLI
- Gemini CLI
- Additional CLIs can be configured (see |g:ai_cli_additional_processes|)

==============================================================================
3. FEATURES                                        *tmux-send-to-ai-cli-features*

Send code or text from Vim directly to your AI assistant:

- Yanked text - Send text from Vim registers
- Entire buffer - Send the whole file you're editing
- Visual selection - Send highlighted text
- Line ranges - Send specific lines (e.g., lines 10-20)
- Current line - Send the line where your cursor is
- Current paragraph - Send the paragraph around your cursor
- Auto-detection - Automatically finds AI CLI panes in tmux

==============================================================================
4. REQUIREMENTS                                *tmux-send-to-ai-cli-requirements*

- Unix-like system (Linux, macOS, etc.)
- tmux
- AI CLI running in a tmux pane

==============================================================================
5. INSTALLATION                                *tmux-send-to-ai-cli-installation*

Using vim-plug: >
    Plug 'i9wa4/vim-tmux-send-to-ai-cli'
<

Using Vundle: >
    Plugin 'i9wa4/vim-tmux-send-to-ai-cli'
<

Using dein: >
    call dein#add('i9wa4/vim-tmux-send-to-ai-cli')
<

==============================================================================
6. CONFIGURATION                              *tmux-send-to-ai-cli-configuration*

                                            *g:ai_cli_additional_processes*
g:ai_cli_additional_processes~
    Default: `[]` (empty list)

    Additional process names to search for when auto-detecting the AI CLI pane.
    These will be added to the built-in list (claude, codex, gemini).
    Use this to support custom AI CLI tools.

Example: >
    let g:ai_cli_additional_processes = ['mycli', 'aichat']
<

                                                        *g:ai_cli_target*
g:ai_cli_target~
    Default: ''

    Fallback tmux target pane when automatic detection fails.
    The plugin automatically detects AI CLI panes in the current window
    by searching for processes defined in `g:ai_cli_process_names`.
    This setting is used only when automatic detection cannot find an AI CLI pane.

Example: >
    let g:ai_cli_target = 'main:1.2'
<

==============================================================================
7. COMMANDS                                        *tmux-send-to-ai-cli-commands*

                                                        *:AiCliSendYanked*
:AiCliSendYanked
    Send the content of the * register (yanked text) to AI CLI.

                                                        *:AiCliSendBuffer*
:AiCliSendBuffer
    Send the entire current buffer to AI CLI.

                                                         *:AiCliSendRange*
:[range]AiCliSendRange
    Send the specified range of lines to AI CLI.

                                                    *:AiCliSendCurrentLine*
:AiCliSendCurrentLine
    Send the current line to AI CLI.

                                                      *:AiCliSendParagraph*
:AiCliSendParagraph
    Send the current paragraph to AI CLI.

==============================================================================
8. MAPPINGS                                        *tmux-send-to-ai-cli-mappings*

Plug mappings for custom configuration:

    <Plug>(tmux-send-to-ai-cli-yanked)    Send yanked text
    <Plug>(tmux-send-to-ai-cli-buffer)    Send entire buffer
    <Plug>(tmux-send-to-ai-cli-visual)    Send visual selection
    <Plug>(tmux-send-to-ai-cli-current-line) Send current line
    <Plug>(tmux-send-to-ai-cli-paragraph) Send current paragraph

==============================================================================
9. LIMITATIONS                                    *tmux-send-to-ai-cli-limitations*

- The plugin searches for AI CLI panes in the current tmux session
  (prioritizing current window)
- If multiple AI CLI panes exist in the same window, the first one found
  will be used as the target
- If the AI CLI process name differs from the supported list, manual
  configuration via g:ai_cli_target is required

==============================================================================
10. EXAMPLES                                        *tmux-send-to-ai-cli-examples*

Custom mappings: >
    nmap <Leader>ay <Plug>(tmux-send-to-ai-cli-yanked)
    nmap <Leader>ab <Plug>(tmux-send-to-ai-cli-buffer)
    vmap <Leader>av <Plug>(tmux-send-to-ai-cli-visual)
    nmap <Leader>al <Plug>(tmux-send-to-ai-cli-current-line)
    nmap <Leader>ap <Plug>(tmux-send-to-ai-cli-paragraph)
<

Fallback target configuration: >
    let g:ai_cli_target = 'ai:0.1'
<

Send specific lines: >
    :10,20AiCliSendRange
<

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
